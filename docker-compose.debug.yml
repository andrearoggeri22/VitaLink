version: '3.8'

# Questo file è una configurazione alternativa per il debug
# Usa: docker-compose -f docker-compose.yml -f docker-compose.debug.yml up

services:
  web:
    # Porta esposta anche su 8000 per test alternativi
    ports:
      - "5000:5000"
      - "8000:5000"
    # Variabili d'ambiente in modalità debug
    environment:
      - FLASK_APP=main.py
      - FLASK_ENV=development  # Imposta l'ambiente di sviluppo
      - FLASK_DEBUG=1          # Abilita il debug di Flask
      - PYTHONUNBUFFERED=1     # Output non bufferizzato
    # Comando alternativo per il debug
    command: ["gunicorn", "--bind", "0.0.0.0:5000", "--workers", "1", "--reload", "--access-logfile", "-", "--error-logfile", "-", "--log-level", "debug", "main:app"]
    # Volume per permettere l'aggiornamento automatico del codice
    volumes:
      - ./:/app
      - ./uploads:/app/uploads

  db:
    # Con pgadmin per la gestione del database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=vitalink
      - POSTGRES_PASSWORD=vitalink_password
      - POSTGRES_DB=vitalink

  # Aggiungi pgAdmin per visualizzare il database (opzionale)
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@vitalink.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - vitalink-network