@startuml VitaLink - State Diagram

' Stile e configurazione
skinparam state {
    BackgroundColor #f0f0f0
    BorderColor #555555
}
skinparam arrow {
    Color #666666
}

title VitaLink - State Diagram: Ciclo di Vita di un Collegamento con Piattaforme Sanitarie

' Stato iniziale
[*] --> LinkCreato : Medico genera link

' Stati
state LinkCreato {
    state "Link UUID generato" as LinkGenerated
    state "Non ancora utilizzato" as NotUsed
    state "Token non presenti" as NoTokens
    
    LinkGenerated -[hidden]-> NotUsed
    NotUsed -[hidden]-> NoTokens
}

state LinkInAttesa {
    state "In attesa di autorizzazione" as WaitingAuth
}

state LinkAutorizzato {
    state "Token salvati" as TokensSaved
    state "Collegamento attivo" as ConnectionActive
    
    TokensSaved -[hidden]-> ConnectionActive
}

state LinkErrore {
    state "Autorizzazione rifiutata" as AuthRejected
}

state LinkScaduto {
    state "Superato tempo massimo" as TimedOut
}

state TokenScaduto {
    state "Access token scaduto" as TokenExpired
    state "Necessario refresh" as NeedsRefresh
    
    TokenExpired -[hidden]-> NeedsRefresh
}

state TokenRinfrescato {
    state "Nuovi token salvati" as NewTokens
}

state CollegamentoDisconnesso {
    state "Disconnesso manualmente" as ManualDisconnect
}

' Transizioni
LinkCreato --> LinkInAttesa : Link inviato al paziente
LinkInAttesa --> LinkAutorizzato : Paziente autorizza
LinkInAttesa --> LinkErrore : Paziente rifiuta
LinkInAttesa --> LinkScaduto : Scadenza timeout
LinkErrore --> [*] : Link non più utilizzabile
LinkScaduto --> [*] : Link non più utilizzabile

LinkAutorizzato --> TokenScaduto : Access token scade
TokenScaduto --> TokenRinfrescato : Refresh automatico riuscito
TokenRinfrescato --> LinkAutorizzato : Collegamento ripristinato

TokenScaduto --> CollegamentoDisconnesso : Refresh token scaduto/invalido
LinkAutorizzato --> CollegamentoDisconnesso : Medico disconnette
CollegamentoDisconnesso --> [*] : Collegamento terminato

' Note
note right of LinkCreato
  Il link viene creato con un UUID univoco
  e una data di scadenza (solitamente 24 ore)
end note

note right of LinkAutorizzato
  Quando autorizzato, vengono salvati:
  - Access token
  - Refresh token
  - Data di scadenza token
end note

note right of TokenScaduto
  L'access token di Fitbit 
  scade dopo 8 ore
end note

note right of TokenRinfrescato
  Il refresh token di Fitbit 
  è valido per 30 giorni
end note

' Diagramma di Stato Importazione Paziente
state "\nImportazione Paziente con UUID\n" as PatientImport {
  [*] --> UUIDInserito : Medico inserisce UUID paziente
  
  state UUIDInserito
  state VerificaUUID
  state PazienteAssociato
  state PazienteNonTrovato
  state AssociazioneEsistente
  state AssociazioneCreata
  
  UUIDInserito --> VerificaUUID : Avvia importazione
  VerificaUUID --> PazienteNonTrovato : UUID non esiste
  VerificaUUID --> PazienteAssociato : UUID trovato
  PazienteNonTrovato --> [*] : Errore importazione
  
  PazienteAssociato --> AssociazioneEsistente : Già associato a questo medico
  PazienteAssociato --> AssociazioneCreata : Non ancora associato
  AssociazioneEsistente --> [*] : Nessuna azione necessaria
  AssociazioneCreata --> [*] : Importazione completata
  
  note right of UUIDInserito
    Il UUID è un identificatore
    univoco assegnato a
    ciascun paziente
  end note
  
  note bottom of AssociazioneCreata
    Quando un paziente viene importato, tutte le sue
    connessioni con le piattaforme sanitarie rimangono attive
  end note
}

' Diagramma di Stato Visualizzazione Dati Vitali
state "\nVisualizzazione Dati Vitali\n" as VitalDataView {
  [*] --> VerificaConnessione : Accesso alla pagina
  
  state VerificaConnessione {
    [*] --> ConnessioneAttiva : Controllo stato piattaforma
    [*] --> ConnessioneInattiva : Controllo stato piattaforma
    
    ConnessioneAttiva --> [*] : Procedi
    ConnessioneInattiva --> [*] : Mostra opzione per connettere
  }
  
  VerificaConnessione --> InvioRichiestaDati : Se connesso
  VerificaConnessione --> MostraConnessioneNecessaria : Se non connesso
  MostraConnessioneNecessaria --> [*] : Fine (nessun dato)
  
  state InvioRichiestaDati {
    [*] --> ControlloCache
    ControlloCache --> UsoDatiCache : Cache valida
    ControlloCache --> ControlloToken : Cache non valida
    
    ControlloToken --> RinnovoToken : Token scaduto
    ControlloToken --> ControlloRateLimit : Token valido
    
    RinnovoToken --> ControlloRateLimit : Rinnovo riuscito
    RinnovoToken --> ErroreRinnovo : Rinnovo fallito
    
    ControlloRateLimit --> RichiestaAPI : Non limitato
    ControlloRateLimit --> ErroreRateLimit : Limitato
    
    RichiestaAPI --> ElaborazioneDati : API risponde
    RichiestaAPI --> ErroreAPI : API fallisce
    
    ElaborazioneDati --> AggiornamentoCache : Dati ricevuti
    AggiornamentoCache --> [*] : Dati pronti
    
    UsoDatiCache --> [*] : Dati pronti
    
    ErroreRinnovo --> [*] : Errore
    ErroreRateLimit --> [*] : Errore
    ErroreAPI --> [*] : Errore
  }
  
  InvioRichiestaDati --> RenderizzaGrafici : Dati disponibili
  InvioRichiestaDati --> MostraErrore : Errore
  
  RenderizzaGrafici --> MostraOsservazioni : Grafici mostrati
  MostraOsservazioni --> InterazioneUtente : Pagina completa
  MostraErrore --> InterazioneUtente : Errore mostrato
  
  InterazioneUtente --> [*] : Fine visualizzazione
  
  note bottom of ControlloCache
    La cache è temporanea e viene
    invalidata quando l'utente
    chiude la pagina o la sessione
  end note
  
  note right of ElaborazioneDati
    I dati non vengono salvati permanentemente
    nel database ma solo nella cache temporanea
  end note
}

@enduml
