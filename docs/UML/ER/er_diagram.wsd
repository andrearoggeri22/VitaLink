@startuml VitaLink - ER Diagram

' Stile e configurazione
skinparam linetype ortho
skinparam package {
    BackgroundColor white
    BorderColor #555555
}
skinparam entity {
    BackgroundColor #f0f0f0
    BorderColor #555555
}
skinparam arrow {
    Color #666666
}

title VitaLink - Entity Relationship Diagram

' Entità principale: Doctor
entity "Doctor" as doctor {
  *id : integer <<PK>>
  --
  *email : varchar(120) <<unique>>
  *password_hash : varchar(256)
  *first_name : varchar(100)
  *last_name : varchar(100)
  specialty : varchar(100)
  *created_at : datetime
  *updated_at : datetime
}

' Entità principale: Patient
entity "Patient" as patient {
  *id : integer <<PK>>
  --
  *uuid : varchar(36) <<unique>>
  *first_name : varchar(100)
  *last_name : varchar(100)
  *date_of_birth : date
  gender : varchar(20)
  contact_number : varchar(20)
  email : varchar(120)
  address : text
  *created_at : datetime
  *updated_at : datetime
  connected_platform : enum(HealthPlatform)
  platform_access_token : varchar(1024)
  platform_refresh_token : varchar(1024)
  platform_token_expires_at : datetime
}

' Entità associativa: DoctorPatient
entity "DoctorPatient" as doctor_patient {
  *doctor_id : integer <<PK, FK>>
  *patient_id : integer <<PK, FK>>
  --
  *assigned_date : datetime
}

' Entità: Note
entity "Note" as note {
  *id : integer <<PK>>
  --
  *patient_id : integer <<FK>>
  *doctor_id : integer <<FK>>
  *content : text
  *created_at : datetime
  *updated_at : datetime
}

' Entità: VitalSign (per i dati storici, non utilizzata per i dati in tempo reale)
entity "VitalSign" as vital_sign {
  *id : integer <<PK>>
  --
  *patient_id : integer <<FK>>
  *type : enum(VitalSignType)
  *value : float
  unit : varchar(20)
  *recorded_at : datetime
  *origin : enum(DataOrigin)
  *created_at : datetime
}

' Entità: VitalObservation
entity "VitalObservation" as vital_observation {
  *id : integer <<PK>>
  --
  *patient_id : integer <<FK>>
  *doctor_id : integer <<FK>>
  *vital_type : enum(VitalSignType)
  *content : text
  *start_date : datetime
  *end_date : datetime
  *created_at : datetime
  *updated_at : datetime
}

' Entità: AuditLog
entity "AuditLog" as audit_log {
  *id : integer <<PK>>
  --
  *doctor_id : integer <<FK>>
  *timestamp : datetime
  *action_type : enum(ActionType)
  *entity_type : enum(EntityType)
  *entity_id : integer
  details : text
  patient_id : integer <<FK>>
  ip_address : varchar(50)
}

' Entità: HealthPlatformLink
entity "HealthPlatformLink" as health_platform_link {
  *id : integer <<PK>>
  --
  *uuid : varchar(36) <<unique>>
  *patient_id : integer <<FK>>
  *doctor_id : integer <<FK>>
  *platform : enum(HealthPlatform)
  *created_at : datetime
  *expires_at : datetime
  *used : boolean
}

' Relazioni tra le entità
doctor ||--o{ doctor_patient
patient ||--o{ doctor_patient

doctor ||--o{ note
patient ||--o{ note

patient ||--o{ vital_sign

doctor ||--o{ vital_observation
patient ||--o{ vital_observation

doctor ||--o{ audit_log
patient |o--o{ audit_log

doctor ||--o{ health_platform_link
patient ||--o{ health_platform_link

' Note esplicative
note bottom of health_platform_link
  I link temporanei consentono ai pazienti
  di autorizzare l'accesso alle loro
  piattaforme sanitarie tramite OAuth
end note

note bottom of patient
  Il campo 'uuid' è utilizzato per l'identificazione
  univoca dei pazienti, consentendo l'importazione
  di pazienti esistenti da parte di altri medici
end note

note bottom of vital_observation
  Le osservazioni sono registrate dai medici
  per periodi specifici, ma i dati vitali
  effettivi sono recuperati in tempo reale
  dalle piattaforme sanitarie
end note

' Legenda
legend right
  **Diagramma Entity-Relationship VitaLink**
  
  Questo diagramma mostra la struttura del database
  utilizzata da VitaLink per archiviare
  dati di pazienti, medici, note, osservazioni e 
  integrazioni con piattaforme sanitarie.
  
  I dati vitali non sono archiviati nel database, 
  ma sono recuperati in tempo reale dalle piattaforme 
  sanitarie tramite OAuth.
  
  Il sistema supporta anche l'importazione di pazienti
  esistenti tramite UUID, consentendo a più medici di
  collaborare nella cura di un paziente.
endlegend

@enduml